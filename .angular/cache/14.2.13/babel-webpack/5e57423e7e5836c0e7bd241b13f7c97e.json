{"ast":null,"code":"/*\n * JavaScript Load Image\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, webkitURL, module */\n;\n\n(function ($) {\n  'use strict';\n  /**\n   * Loads an image for a given File object.\n   * Invokes the callback with an img or optional canvas element\n   * (if supported by the browser) as parameter:.\n   *\n   * @param {File|Blob|string} file File or Blob object or image URL\n   * @param {Function} [callback] Image load event callback\n   * @param {object} [options] Options object\n   * @returns {HTMLImageElement|HTMLCanvasElement|FileReader} image object\n   */\n\n  function loadImage(file, callback, options) {\n    var img = document.createElement('img');\n    var url;\n    /**\n     * Callback for the fetchBlob call.\n     *\n     * @param {Blob} blob Blob object\n     * @param {Error} err Error object\n     */\n\n    function fetchBlobCallback(blob, err) {\n      if (err) console.log(err); // eslint-disable-line no-console\n\n      if (blob && loadImage.isInstanceOf('Blob', blob)) {\n        // eslint-disable-next-line no-param-reassign\n        file = blob;\n        url = loadImage.createObjectURL(file);\n      } else {\n        url = file;\n\n        if (options && options.crossOrigin) {\n          img.crossOrigin = options.crossOrigin;\n        }\n      }\n\n      img.src = url;\n    }\n\n    img.onerror = function (event) {\n      return loadImage.onerror(img, event, file, url, callback, options);\n    };\n\n    img.onload = function (event) {\n      return loadImage.onload(img, event, file, url, callback, options);\n    };\n\n    if (typeof file === 'string') {\n      if (loadImage.hasMetaOption(options)) {\n        loadImage.fetchBlob(file, fetchBlobCallback, options);\n      } else {\n        fetchBlobCallback();\n      }\n\n      return img;\n    } else if (loadImage.isInstanceOf('Blob', file) || // Files are also Blob instances, but some browsers\n    // (Firefox 3.6) support the File API but not Blobs:\n    loadImage.isInstanceOf('File', file)) {\n      url = loadImage.createObjectURL(file);\n\n      if (url) {\n        img.src = url;\n        return img;\n      }\n\n      return loadImage.readFile(file, function (e) {\n        var target = e.target;\n\n        if (target && target.result) {\n          img.src = target.result;\n        } else if (callback) {\n          callback(e);\n        }\n      });\n    }\n  } // The check for URL.revokeObjectURL fixes an issue with Opera 12,\n  // which provides URL.createObjectURL but doesn't properly implement it:\n\n\n  var urlAPI = $.createObjectURL && $ || $.URL && URL.revokeObjectURL && URL || $.webkitURL && webkitURL;\n  /**\n   * Helper function to revoke an object URL\n   *\n   * @param {string} url Blob Object URL\n   * @param {object} [options] Options object\n   */\n\n  function revokeHelper(url, options) {\n    if (url && url.slice(0, 5) === 'blob:' && !(options && options.noRevoke)) {\n      loadImage.revokeObjectURL(url);\n    }\n  } // Determines if meta data should be loaded automatically.\n  // Requires the load image meta extension to load meta data.\n\n\n  loadImage.hasMetaOption = function (options) {\n    return options && options.meta;\n  }; // If the callback given to this function returns a blob, it is used as image\n  // source instead of the original url and overrides the file argument used in\n  // the onload and onerror event callbacks:\n\n\n  loadImage.fetchBlob = function (url, callback) {\n    callback();\n  };\n\n  loadImage.isInstanceOf = function (type, obj) {\n    // Cross-frame instanceof check\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']';\n  };\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    callback(img, data);\n  };\n\n  loadImage.onerror = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options);\n\n    if (callback) {\n      callback.call(img, event);\n    }\n  };\n\n  loadImage.onload = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options);\n\n    if (callback) {\n      loadImage.transform(img, options, callback, file, {\n        originalWidth: img.naturalWidth || img.width,\n        originalHeight: img.naturalHeight || img.height\n      });\n    }\n  };\n\n  loadImage.createObjectURL = function (file) {\n    return urlAPI ? urlAPI.createObjectURL(file) : false;\n  };\n\n  loadImage.revokeObjectURL = function (url) {\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false;\n  }; // Loads a given File object via FileReader interface,\n  // invokes the callback with the event object (load or error).\n  // The result can be read via event.target.result:\n\n\n  loadImage.readFile = function (file, callback, method) {\n    if ($.FileReader) {\n      var fileReader = new FileReader();\n      fileReader.onload = fileReader.onerror = callback; // eslint-disable-next-line no-param-reassign\n\n      method = method || 'readAsDataURL';\n\n      if (fileReader[method]) {\n        fileReader[method](file);\n        return fileReader;\n      }\n    }\n\n    return false;\n  };\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return loadImage;\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = loadImage;\n  } else {\n    $.loadImage = loadImage;\n  }\n})(typeof window !== 'undefined' && window || this);","map":{"version":3,"names":["$","loadImage","file","callback","options","img","document","createElement","url","fetchBlobCallback","blob","err","console","log","isInstanceOf","createObjectURL","crossOrigin","src","onerror","event","onload","hasMetaOption","fetchBlob","readFile","e","target","result","urlAPI","URL","revokeObjectURL","webkitURL","revokeHelper","slice","noRevoke","meta","type","obj","Object","prototype","toString","call","transform","data","originalWidth","naturalWidth","width","originalHeight","naturalHeight","height","method","FileReader","fileReader","define","amd","module","exports","window"],"sources":["/Users/denizyucel/Documents/GitHub/cameraApp/node_modules/blueimp-load-image/js/load-image.js"],"sourcesContent":["/*\n * JavaScript Load Image\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, webkitURL, module */\n\n;(function ($) {\n  'use strict'\n\n  /**\n   * Loads an image for a given File object.\n   * Invokes the callback with an img or optional canvas element\n   * (if supported by the browser) as parameter:.\n   *\n   * @param {File|Blob|string} file File or Blob object or image URL\n   * @param {Function} [callback] Image load event callback\n   * @param {object} [options] Options object\n   * @returns {HTMLImageElement|HTMLCanvasElement|FileReader} image object\n   */\n  function loadImage(file, callback, options) {\n    var img = document.createElement('img')\n    var url\n    /**\n     * Callback for the fetchBlob call.\n     *\n     * @param {Blob} blob Blob object\n     * @param {Error} err Error object\n     */\n    function fetchBlobCallback(blob, err) {\n      if (err) console.log(err) // eslint-disable-line no-console\n      if (blob && loadImage.isInstanceOf('Blob', blob)) {\n        // eslint-disable-next-line no-param-reassign\n        file = blob\n        url = loadImage.createObjectURL(file)\n      } else {\n        url = file\n        if (options && options.crossOrigin) {\n          img.crossOrigin = options.crossOrigin\n        }\n      }\n      img.src = url\n    }\n    img.onerror = function (event) {\n      return loadImage.onerror(img, event, file, url, callback, options)\n    }\n    img.onload = function (event) {\n      return loadImage.onload(img, event, file, url, callback, options)\n    }\n    if (typeof file === 'string') {\n      if (loadImage.hasMetaOption(options)) {\n        loadImage.fetchBlob(file, fetchBlobCallback, options)\n      } else {\n        fetchBlobCallback()\n      }\n      return img\n    } else if (\n      loadImage.isInstanceOf('Blob', file) ||\n      // Files are also Blob instances, but some browsers\n      // (Firefox 3.6) support the File API but not Blobs:\n      loadImage.isInstanceOf('File', file)\n    ) {\n      url = loadImage.createObjectURL(file)\n      if (url) {\n        img.src = url\n        return img\n      }\n      return loadImage.readFile(file, function (e) {\n        var target = e.target\n        if (target && target.result) {\n          img.src = target.result\n        } else if (callback) {\n          callback(e)\n        }\n      })\n    }\n  }\n  // The check for URL.revokeObjectURL fixes an issue with Opera 12,\n  // which provides URL.createObjectURL but doesn't properly implement it:\n  var urlAPI =\n    ($.createObjectURL && $) ||\n    ($.URL && URL.revokeObjectURL && URL) ||\n    ($.webkitURL && webkitURL)\n\n  /**\n   * Helper function to revoke an object URL\n   *\n   * @param {string} url Blob Object URL\n   * @param {object} [options] Options object\n   */\n  function revokeHelper(url, options) {\n    if (url && url.slice(0, 5) === 'blob:' && !(options && options.noRevoke)) {\n      loadImage.revokeObjectURL(url)\n    }\n  }\n\n  // Determines if meta data should be loaded automatically.\n  // Requires the load image meta extension to load meta data.\n  loadImage.hasMetaOption = function (options) {\n    return options && options.meta\n  }\n\n  // If the callback given to this function returns a blob, it is used as image\n  // source instead of the original url and overrides the file argument used in\n  // the onload and onerror event callbacks:\n  loadImage.fetchBlob = function (url, callback) {\n    callback()\n  }\n\n  loadImage.isInstanceOf = function (type, obj) {\n    // Cross-frame instanceof check\n    return Object.prototype.toString.call(obj) === '[object ' + type + ']'\n  }\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    callback(img, data)\n  }\n\n  loadImage.onerror = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options)\n    if (callback) {\n      callback.call(img, event)\n    }\n  }\n\n  loadImage.onload = function (img, event, file, url, callback, options) {\n    revokeHelper(url, options)\n    if (callback) {\n      loadImage.transform(img, options, callback, file, {\n        originalWidth: img.naturalWidth || img.width,\n        originalHeight: img.naturalHeight || img.height\n      })\n    }\n  }\n\n  loadImage.createObjectURL = function (file) {\n    return urlAPI ? urlAPI.createObjectURL(file) : false\n  }\n\n  loadImage.revokeObjectURL = function (url) {\n    return urlAPI ? urlAPI.revokeObjectURL(url) : false\n  }\n\n  // Loads a given File object via FileReader interface,\n  // invokes the callback with the event object (load or error).\n  // The result can be read via event.target.result:\n  loadImage.readFile = function (file, callback, method) {\n    if ($.FileReader) {\n      var fileReader = new FileReader()\n      fileReader.onload = fileReader.onerror = callback\n      // eslint-disable-next-line no-param-reassign\n      method = method || 'readAsDataURL'\n      if (fileReader[method]) {\n        fileReader[method](file)\n        return fileReader\n      }\n    }\n    return false\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return loadImage\n    })\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = loadImage\n  } else {\n    $.loadImage = loadImage\n  }\n})((typeof window !== 'undefined' && window) || this)\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;;AAAC,CAAC,UAAUA,CAAV,EAAa;EACb;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACE,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,QAAzB,EAAmCC,OAAnC,EAA4C;IAC1C,IAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;IACA,IAAIC,GAAJ;IACA;AACJ;AACA;AACA;AACA;AACA;;IACI,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,GAAjC,EAAsC;MACpC,IAAIA,GAAJ,EAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAD2B,CACV;;MAC1B,IAAID,IAAI,IAAIT,SAAS,CAACa,YAAV,CAAuB,MAAvB,EAA+BJ,IAA/B,CAAZ,EAAkD;QAChD;QACAR,IAAI,GAAGQ,IAAP;QACAF,GAAG,GAAGP,SAAS,CAACc,eAAV,CAA0Bb,IAA1B,CAAN;MACD,CAJD,MAIO;QACLM,GAAG,GAAGN,IAAN;;QACA,IAAIE,OAAO,IAAIA,OAAO,CAACY,WAAvB,EAAoC;UAClCX,GAAG,CAACW,WAAJ,GAAkBZ,OAAO,CAACY,WAA1B;QACD;MACF;;MACDX,GAAG,CAACY,GAAJ,GAAUT,GAAV;IACD;;IACDH,GAAG,CAACa,OAAJ,GAAc,UAAUC,KAAV,EAAiB;MAC7B,OAAOlB,SAAS,CAACiB,OAAV,CAAkBb,GAAlB,EAAuBc,KAAvB,EAA8BjB,IAA9B,EAAoCM,GAApC,EAAyCL,QAAzC,EAAmDC,OAAnD,CAAP;IACD,CAFD;;IAGAC,GAAG,CAACe,MAAJ,GAAa,UAAUD,KAAV,EAAiB;MAC5B,OAAOlB,SAAS,CAACmB,MAAV,CAAiBf,GAAjB,EAAsBc,KAAtB,EAA6BjB,IAA7B,EAAmCM,GAAnC,EAAwCL,QAAxC,EAAkDC,OAAlD,CAAP;IACD,CAFD;;IAGA,IAAI,OAAOF,IAAP,KAAgB,QAApB,EAA8B;MAC5B,IAAID,SAAS,CAACoB,aAAV,CAAwBjB,OAAxB,CAAJ,EAAsC;QACpCH,SAAS,CAACqB,SAAV,CAAoBpB,IAApB,EAA0BO,iBAA1B,EAA6CL,OAA7C;MACD,CAFD,MAEO;QACLK,iBAAiB;MAClB;;MACD,OAAOJ,GAAP;IACD,CAPD,MAOO,IACLJ,SAAS,CAACa,YAAV,CAAuB,MAAvB,EAA+BZ,IAA/B,KACA;IACA;IACAD,SAAS,CAACa,YAAV,CAAuB,MAAvB,EAA+BZ,IAA/B,CAJK,EAKL;MACAM,GAAG,GAAGP,SAAS,CAACc,eAAV,CAA0Bb,IAA1B,CAAN;;MACA,IAAIM,GAAJ,EAAS;QACPH,GAAG,CAACY,GAAJ,GAAUT,GAAV;QACA,OAAOH,GAAP;MACD;;MACD,OAAOJ,SAAS,CAACsB,QAAV,CAAmBrB,IAAnB,EAAyB,UAAUsB,CAAV,EAAa;QAC3C,IAAIC,MAAM,GAAGD,CAAC,CAACC,MAAf;;QACA,IAAIA,MAAM,IAAIA,MAAM,CAACC,MAArB,EAA6B;UAC3BrB,GAAG,CAACY,GAAJ,GAAUQ,MAAM,CAACC,MAAjB;QACD,CAFD,MAEO,IAAIvB,QAAJ,EAAc;UACnBA,QAAQ,CAACqB,CAAD,CAAR;QACD;MACF,CAPM,CAAP;IAQD;EACF,CArEY,CAsEb;EACA;;;EACA,IAAIG,MAAM,GACP3B,CAAC,CAACe,eAAF,IAAqBf,CAAtB,IACCA,CAAC,CAAC4B,GAAF,IAASA,GAAG,CAACC,eAAb,IAAgCD,GADjC,IAEC5B,CAAC,CAAC8B,SAAF,IAAeA,SAHlB;EAKA;AACF;AACA;AACA;AACA;AACA;;EACE,SAASC,YAAT,CAAsBvB,GAAtB,EAA2BJ,OAA3B,EAAoC;IAClC,IAAII,GAAG,IAAIA,GAAG,CAACwB,KAAJ,CAAU,CAAV,EAAa,CAAb,MAAoB,OAA3B,IAAsC,EAAE5B,OAAO,IAAIA,OAAO,CAAC6B,QAArB,CAA1C,EAA0E;MACxEhC,SAAS,CAAC4B,eAAV,CAA0BrB,GAA1B;IACD;EACF,CAvFY,CAyFb;EACA;;;EACAP,SAAS,CAACoB,aAAV,GAA0B,UAAUjB,OAAV,EAAmB;IAC3C,OAAOA,OAAO,IAAIA,OAAO,CAAC8B,IAA1B;EACD,CAFD,CA3Fa,CA+Fb;EACA;EACA;;;EACAjC,SAAS,CAACqB,SAAV,GAAsB,UAAUd,GAAV,EAAeL,QAAf,EAAyB;IAC7CA,QAAQ;EACT,CAFD;;EAIAF,SAAS,CAACa,YAAV,GAAyB,UAAUqB,IAAV,EAAgBC,GAAhB,EAAqB;IAC5C;IACA,OAAOC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,GAA/B,MAAwC,aAAaD,IAAb,GAAoB,GAAnE;EACD,CAHD;;EAKAlC,SAAS,CAACwC,SAAV,GAAsB,UAAUpC,GAAV,EAAeD,OAAf,EAAwBD,QAAxB,EAAkCD,IAAlC,EAAwCwC,IAAxC,EAA8C;IAClEvC,QAAQ,CAACE,GAAD,EAAMqC,IAAN,CAAR;EACD,CAFD;;EAIAzC,SAAS,CAACiB,OAAV,GAAoB,UAAUb,GAAV,EAAec,KAAf,EAAsBjB,IAAtB,EAA4BM,GAA5B,EAAiCL,QAAjC,EAA2CC,OAA3C,EAAoD;IACtE2B,YAAY,CAACvB,GAAD,EAAMJ,OAAN,CAAZ;;IACA,IAAID,QAAJ,EAAc;MACZA,QAAQ,CAACqC,IAAT,CAAcnC,GAAd,EAAmBc,KAAnB;IACD;EACF,CALD;;EAOAlB,SAAS,CAACmB,MAAV,GAAmB,UAAUf,GAAV,EAAec,KAAf,EAAsBjB,IAAtB,EAA4BM,GAA5B,EAAiCL,QAAjC,EAA2CC,OAA3C,EAAoD;IACrE2B,YAAY,CAACvB,GAAD,EAAMJ,OAAN,CAAZ;;IACA,IAAID,QAAJ,EAAc;MACZF,SAAS,CAACwC,SAAV,CAAoBpC,GAApB,EAAyBD,OAAzB,EAAkCD,QAAlC,EAA4CD,IAA5C,EAAkD;QAChDyC,aAAa,EAAEtC,GAAG,CAACuC,YAAJ,IAAoBvC,GAAG,CAACwC,KADS;QAEhDC,cAAc,EAAEzC,GAAG,CAAC0C,aAAJ,IAAqB1C,GAAG,CAAC2C;MAFO,CAAlD;IAID;EACF,CARD;;EAUA/C,SAAS,CAACc,eAAV,GAA4B,UAAUb,IAAV,EAAgB;IAC1C,OAAOyB,MAAM,GAAGA,MAAM,CAACZ,eAAP,CAAuBb,IAAvB,CAAH,GAAkC,KAA/C;EACD,CAFD;;EAIAD,SAAS,CAAC4B,eAAV,GAA4B,UAAUrB,GAAV,EAAe;IACzC,OAAOmB,MAAM,GAAGA,MAAM,CAACE,eAAP,CAAuBrB,GAAvB,CAAH,GAAiC,KAA9C;EACD,CAFD,CApIa,CAwIb;EACA;EACA;;;EACAP,SAAS,CAACsB,QAAV,GAAqB,UAAUrB,IAAV,EAAgBC,QAAhB,EAA0B8C,MAA1B,EAAkC;IACrD,IAAIjD,CAAC,CAACkD,UAAN,EAAkB;MAChB,IAAIC,UAAU,GAAG,IAAID,UAAJ,EAAjB;MACAC,UAAU,CAAC/B,MAAX,GAAoB+B,UAAU,CAACjC,OAAX,GAAqBf,QAAzC,CAFgB,CAGhB;;MACA8C,MAAM,GAAGA,MAAM,IAAI,eAAnB;;MACA,IAAIE,UAAU,CAACF,MAAD,CAAd,EAAwB;QACtBE,UAAU,CAACF,MAAD,CAAV,CAAmB/C,IAAnB;QACA,OAAOiD,UAAP;MACD;IACF;;IACD,OAAO,KAAP;EACD,CAZD;;EAcA,IAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA3C,EAAgD;IAC9CD,MAAM,CAAC,YAAY;MACjB,OAAOnD,SAAP;IACD,CAFK,CAAN;EAGD,CAJD,MAIO,IAAI,OAAOqD,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,OAAzC,EAAkD;IACvDD,MAAM,CAACC,OAAP,GAAiBtD,SAAjB;EACD,CAFM,MAEA;IACLD,CAAC,CAACC,SAAF,GAAcA,SAAd;EACD;AACF,CAlKA,EAkKG,OAAOuD,MAAP,KAAkB,WAAlB,IAAiCA,MAAlC,IAA6C,IAlK/C"},"metadata":{},"sourceType":"script"}