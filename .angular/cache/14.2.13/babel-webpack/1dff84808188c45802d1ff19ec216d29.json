{"ast":null,"code":"/**\n * spawnWorker\n *\n * @name spawnWorker\n * @function create a new Worker in browser\n * @access public\n */\nmodule.exports = ({\n  workerPath,\n  workerBlobURL\n}) => {\n  let worker;\n\n  if (Blob && URL && workerBlobURL) {\n    const blob = new Blob([`importScripts(\"${workerPath}\");`], {\n      type: 'application/javascript'\n    });\n    worker = new Worker(URL.createObjectURL(blob));\n  } else {\n    worker = new Worker(workerPath);\n  }\n\n  return worker;\n};","map":{"version":3,"names":["module","exports","workerPath","workerBlobURL","worker","Blob","URL","blob","type","Worker","createObjectURL"],"sources":["/Users/denizyucel/Documents/GitHub/cameraApp/node_modules/tesseract.js/src/worker/browser/spawnWorker.js"],"sourcesContent":["/**\n * spawnWorker\n *\n * @name spawnWorker\n * @function create a new Worker in browser\n * @access public\n */\nmodule.exports = ({ workerPath, workerBlobURL }) => {\n  let worker;\n  if (Blob && URL && workerBlobURL) {\n    const blob = new Blob([`importScripts(\"${workerPath}\");`], {\n      type: 'application/javascript',\n    });\n    worker = new Worker(URL.createObjectURL(blob));\n  } else {\n    worker = new Worker(workerPath);\n  }\n\n  return worker;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,MAAM,CAACC,OAAP,GAAiB,CAAC;EAAEC,UAAF;EAAcC;AAAd,CAAD,KAAmC;EAClD,IAAIC,MAAJ;;EACA,IAAIC,IAAI,IAAIC,GAAR,IAAeH,aAAnB,EAAkC;IAChC,MAAMI,IAAI,GAAG,IAAIF,IAAJ,CAAS,CAAE,kBAAiBH,UAAW,KAA9B,CAAT,EAA8C;MACzDM,IAAI,EAAE;IADmD,CAA9C,CAAb;IAGAJ,MAAM,GAAG,IAAIK,MAAJ,CAAWH,GAAG,CAACI,eAAJ,CAAoBH,IAApB,CAAX,CAAT;EACD,CALD,MAKO;IACLH,MAAM,GAAG,IAAIK,MAAJ,CAAWP,UAAX,CAAT;EACD;;EAED,OAAOE,MAAP;AACD,CAZD"},"metadata":{},"sourceType":"script"}