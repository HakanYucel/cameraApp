{"ast":null,"code":"var _asyncToGenerator = require(\"/Users/denizyucel/Documents/GitHub/cameraApp/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar _this = this;\n\nconst createJob = require('./createJob');\n\nconst {\n  log\n} = require('./utils/log');\n\nconst getId = require('./utils/getId');\n\nlet schedulerCounter = 0;\n\nmodule.exports = () => {\n  const id = getId('Scheduler', schedulerCounter);\n  const workers = {};\n  const runningWorkers = {};\n  let jobQueue = [];\n  schedulerCounter += 1;\n\n  const getQueueLen = () => jobQueue.length;\n\n  const getNumWorkers = () => Object.keys(workers).length;\n\n  const dequeue = () => {\n    if (jobQueue.length !== 0) {\n      const wIds = Object.keys(workers);\n\n      for (let i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n\n  const queue = (action, payload) => new Promise((resolve, reject) => {\n    const job = createJob({\n      action,\n      payload\n    });\n    jobQueue.push( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (w) {\n        jobQueue.shift();\n        runningWorkers[w.id] = job;\n\n        try {\n          resolve(yield w[action].apply(_this, [...payload, job.id]));\n        } catch (err) {\n          reject(err);\n        } finally {\n          delete runningWorkers[w.id];\n          dequeue();\n        }\n      });\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    log(`[${id}]: Add ${job.id} to JobQueue`);\n    log(`[${id}]: JobQueue length=${jobQueue.length}`);\n    dequeue();\n  });\n\n  const addWorker = w => {\n    workers[w.id] = w;\n    log(`[${id}]: Add ${w.id}`);\n    log(`[${id}]: Number of workers=${getNumWorkers()}`);\n    dequeue();\n    return w.id;\n  };\n\n  const addJob = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (action, ...payload) {\n      if (getNumWorkers() === 0) {\n        throw Error(`[${id}]: You need to have at least one worker before adding jobs`);\n      }\n\n      return queue(action, payload);\n    });\n\n    return function addJob(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const terminate = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      Object.keys(workers).forEach( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator(function* (wid) {\n          yield workers[wid].terminate();\n        });\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      jobQueue = [];\n    });\n\n    return function terminate() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return {\n    addWorker,\n    addJob,\n    terminate,\n    getQueueLen,\n    getNumWorkers\n  };\n};","map":{"version":3,"names":["createJob","require","log","getId","schedulerCounter","module","exports","id","workers","runningWorkers","jobQueue","getQueueLen","length","getNumWorkers","Object","keys","dequeue","wIds","i","queue","action","payload","Promise","resolve","reject","job","push","w","shift","apply","err","addWorker","addJob","Error","terminate","forEach","wid"],"sources":["/Users/denizyucel/Documents/GitHub/cameraApp/node_modules/tesseract.js/src/createScheduler.js"],"sourcesContent":["const createJob = require('./createJob');\nconst { log } = require('./utils/log');\nconst getId = require('./utils/getId');\n\nlet schedulerCounter = 0;\n\nmodule.exports = () => {\n  const id = getId('Scheduler', schedulerCounter);\n  const workers = {};\n  const runningWorkers = {};\n  let jobQueue = [];\n\n  schedulerCounter += 1;\n\n  const getQueueLen = () => jobQueue.length;\n  const getNumWorkers = () => Object.keys(workers).length;\n\n  const dequeue = () => {\n    if (jobQueue.length !== 0) {\n      const wIds = Object.keys(workers);\n      for (let i = 0; i < wIds.length; i += 1) {\n        if (typeof runningWorkers[wIds[i]] === 'undefined') {\n          jobQueue[0](workers[wIds[i]]);\n          break;\n        }\n      }\n    }\n  };\n\n  const queue = (action, payload) => (\n    new Promise((resolve, reject) => {\n      const job = createJob({ action, payload });\n      jobQueue.push(async (w) => {\n        jobQueue.shift();\n        runningWorkers[w.id] = job;\n        try {\n          resolve(await w[action].apply(this, [...payload, job.id]));\n        } catch (err) {\n          reject(err);\n        } finally {\n          delete runningWorkers[w.id];\n          dequeue();\n        }\n      });\n      log(`[${id}]: Add ${job.id} to JobQueue`);\n      log(`[${id}]: JobQueue length=${jobQueue.length}`);\n      dequeue();\n    })\n  );\n\n  const addWorker = (w) => {\n    workers[w.id] = w;\n    log(`[${id}]: Add ${w.id}`);\n    log(`[${id}]: Number of workers=${getNumWorkers()}`);\n    dequeue();\n    return w.id;\n  };\n\n  const addJob = async (action, ...payload) => {\n    if (getNumWorkers() === 0) {\n      throw Error(`[${id}]: You need to have at least one worker before adding jobs`);\n    }\n    return queue(action, payload);\n  };\n\n  const terminate = async () => {\n    Object.keys(workers).forEach(async (wid) => {\n      await workers[wid].terminate();\n    });\n    jobQueue = [];\n  };\n\n  return {\n    addWorker,\n    addJob,\n    terminate,\n    getQueueLen,\n    getNumWorkers,\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}