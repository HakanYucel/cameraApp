{"ast":null,"code":"/*\n * JavaScript Load Image Scaling\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, require */\n;\n\n(function (factory) {\n  'use strict';\n\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'));\n  } else {\n    // Browser globals:\n    factory(window.loadImage);\n  }\n})(function (loadImage) {\n  'use strict';\n\n  var originalTransform = loadImage.transform;\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    originalTransform.call(loadImage, loadImage.scale(img, options, data), options, callback, file, data);\n  }; // Transform image coordinates, allows to override e.g.\n  // the canvas orientation based on the orientation option,\n  // gets canvas, options passed as arguments:\n\n\n  loadImage.transformCoordinates = function () {}; // Returns transformed options, allows to override e.g.\n  // maxWidth, maxHeight and crop options based on the aspectRatio.\n  // gets img, options passed as arguments:\n\n\n  loadImage.getTransformedOptions = function (img, options) {\n    var aspectRatio = options.aspectRatio;\n    var newOptions;\n    var i;\n    var width;\n    var height;\n\n    if (!aspectRatio) {\n      return options;\n    }\n\n    newOptions = {};\n\n    for (i in options) {\n      if (Object.prototype.hasOwnProperty.call(options, i)) {\n        newOptions[i] = options[i];\n      }\n    }\n\n    newOptions.crop = true;\n    width = img.naturalWidth || img.width;\n    height = img.naturalHeight || img.height;\n\n    if (width / height > aspectRatio) {\n      newOptions.maxWidth = height * aspectRatio;\n      newOptions.maxHeight = height;\n    } else {\n      newOptions.maxWidth = width;\n      newOptions.maxHeight = width / aspectRatio;\n    }\n\n    return newOptions;\n  }; // Canvas render method, allows to implement a different rendering algorithm:\n\n\n  loadImage.renderImageToCanvas = function (canvas, img, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight, options) {\n    var ctx = canvas.getContext('2d');\n\n    if (options.imageSmoothingEnabled === false) {\n      ctx.imageSmoothingEnabled = false;\n    } else if (options.imageSmoothingQuality) {\n      ctx.imageSmoothingQuality = options.imageSmoothingQuality;\n    }\n\n    ctx.drawImage(img, sourceX, sourceY, sourceWidth, sourceHeight, destX, destY, destWidth, destHeight);\n    return canvas;\n  }; // Determines if the target image should be a canvas element:\n\n\n  loadImage.hasCanvasOption = function (options) {\n    return options.canvas || options.crop || !!options.aspectRatio;\n  }; // Scales and/or crops the given image (img or canvas HTML element)\n  // using the given options.\n  // Returns a canvas object if the browser supports canvas\n  // and the hasCanvasOption method returns true or a canvas\n  // object is passed as image, else the scaled image:\n\n\n  loadImage.scale = function (img, options, data) {\n    // eslint-disable-next-line no-param-reassign\n    options = options || {};\n    var canvas = document.createElement('canvas');\n    var useCanvas = img.getContext || loadImage.hasCanvasOption(options) && canvas.getContext;\n    var width = img.naturalWidth || img.width;\n    var height = img.naturalHeight || img.height;\n    var destWidth = width;\n    var destHeight = height;\n    var maxWidth;\n    var maxHeight;\n    var minWidth;\n    var minHeight;\n    var sourceWidth;\n    var sourceHeight;\n    var sourceX;\n    var sourceY;\n    var pixelRatio;\n    var downsamplingRatio;\n    var tmp;\n    /**\n     * Scales up image dimensions\n     */\n\n    function scaleUp() {\n      var scale = Math.max((minWidth || destWidth) / destWidth, (minHeight || destHeight) / destHeight);\n\n      if (scale > 1) {\n        destWidth *= scale;\n        destHeight *= scale;\n      }\n    }\n    /**\n     * Scales down image dimensions\n     */\n\n\n    function scaleDown() {\n      var scale = Math.min((maxWidth || destWidth) / destWidth, (maxHeight || destHeight) / destHeight);\n\n      if (scale < 1) {\n        destWidth *= scale;\n        destHeight *= scale;\n      }\n    }\n\n    if (useCanvas) {\n      // eslint-disable-next-line no-param-reassign\n      options = loadImage.getTransformedOptions(img, options, data);\n      sourceX = options.left || 0;\n      sourceY = options.top || 0;\n\n      if (options.sourceWidth) {\n        sourceWidth = options.sourceWidth;\n\n        if (options.right !== undefined && options.left === undefined) {\n          sourceX = width - sourceWidth - options.right;\n        }\n      } else {\n        sourceWidth = width - sourceX - (options.right || 0);\n      }\n\n      if (options.sourceHeight) {\n        sourceHeight = options.sourceHeight;\n\n        if (options.bottom !== undefined && options.top === undefined) {\n          sourceY = height - sourceHeight - options.bottom;\n        }\n      } else {\n        sourceHeight = height - sourceY - (options.bottom || 0);\n      }\n\n      destWidth = sourceWidth;\n      destHeight = sourceHeight;\n    }\n\n    maxWidth = options.maxWidth;\n    maxHeight = options.maxHeight;\n    minWidth = options.minWidth;\n    minHeight = options.minHeight;\n\n    if (useCanvas && maxWidth && maxHeight && options.crop) {\n      destWidth = maxWidth;\n      destHeight = maxHeight;\n      tmp = sourceWidth / sourceHeight - maxWidth / maxHeight;\n\n      if (tmp < 0) {\n        sourceHeight = maxHeight * sourceWidth / maxWidth;\n\n        if (options.top === undefined && options.bottom === undefined) {\n          sourceY = (height - sourceHeight) / 2;\n        }\n      } else if (tmp > 0) {\n        sourceWidth = maxWidth * sourceHeight / maxHeight;\n\n        if (options.left === undefined && options.right === undefined) {\n          sourceX = (width - sourceWidth) / 2;\n        }\n      }\n    } else {\n      if (options.contain || options.cover) {\n        minWidth = maxWidth = maxWidth || minWidth;\n        minHeight = maxHeight = maxHeight || minHeight;\n      }\n\n      if (options.cover) {\n        scaleDown();\n        scaleUp();\n      } else {\n        scaleUp();\n        scaleDown();\n      }\n    }\n\n    if (useCanvas) {\n      pixelRatio = options.pixelRatio;\n\n      if (pixelRatio > 1) {\n        canvas.style.width = destWidth + 'px';\n        canvas.style.height = destHeight + 'px';\n        destWidth *= pixelRatio;\n        destHeight *= pixelRatio;\n        canvas.getContext('2d').scale(pixelRatio, pixelRatio);\n      }\n\n      downsamplingRatio = options.downsamplingRatio;\n\n      if (downsamplingRatio > 0 && downsamplingRatio < 1 && destWidth < sourceWidth && destHeight < sourceHeight) {\n        while (sourceWidth * downsamplingRatio > destWidth) {\n          canvas.width = sourceWidth * downsamplingRatio;\n          canvas.height = sourceHeight * downsamplingRatio;\n          loadImage.renderImageToCanvas(canvas, img, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, canvas.width, canvas.height, options);\n          sourceX = 0;\n          sourceY = 0;\n          sourceWidth = canvas.width;\n          sourceHeight = canvas.height; // eslint-disable-next-line no-param-reassign\n\n          img = document.createElement('canvas');\n          img.width = sourceWidth;\n          img.height = sourceHeight;\n          loadImage.renderImageToCanvas(img, canvas, 0, 0, sourceWidth, sourceHeight, 0, 0, sourceWidth, sourceHeight, options);\n        }\n      }\n\n      canvas.width = destWidth;\n      canvas.height = destHeight;\n      loadImage.transformCoordinates(canvas, options);\n      return loadImage.renderImageToCanvas(canvas, img, sourceX, sourceY, sourceWidth, sourceHeight, 0, 0, destWidth, destHeight, options);\n    }\n\n    img.width = destWidth;\n    img.height = destHeight;\n    return img;\n  };\n});","map":{"version":3,"names":["factory","define","amd","module","exports","require","window","loadImage","originalTransform","transform","img","options","callback","file","data","call","scale","transformCoordinates","getTransformedOptions","aspectRatio","newOptions","i","width","height","Object","prototype","hasOwnProperty","crop","naturalWidth","naturalHeight","maxWidth","maxHeight","renderImageToCanvas","canvas","sourceX","sourceY","sourceWidth","sourceHeight","destX","destY","destWidth","destHeight","ctx","getContext","imageSmoothingEnabled","imageSmoothingQuality","drawImage","hasCanvasOption","document","createElement","useCanvas","minWidth","minHeight","pixelRatio","downsamplingRatio","tmp","scaleUp","Math","max","scaleDown","min","left","top","right","undefined","bottom","contain","cover","style"],"sources":["/Users/denizyucel/Documents/GitHub/cameraApp/node_modules/blueimp-load-image/js/load-image-scale.js"],"sourcesContent":["/*\n * JavaScript Load Image Scaling\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, module, require */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  var originalTransform = loadImage.transform\n\n  loadImage.transform = function (img, options, callback, file, data) {\n    originalTransform.call(\n      loadImage,\n      loadImage.scale(img, options, data),\n      options,\n      callback,\n      file,\n      data\n    )\n  }\n\n  // Transform image coordinates, allows to override e.g.\n  // the canvas orientation based on the orientation option,\n  // gets canvas, options passed as arguments:\n  loadImage.transformCoordinates = function () {}\n\n  // Returns transformed options, allows to override e.g.\n  // maxWidth, maxHeight and crop options based on the aspectRatio.\n  // gets img, options passed as arguments:\n  loadImage.getTransformedOptions = function (img, options) {\n    var aspectRatio = options.aspectRatio\n    var newOptions\n    var i\n    var width\n    var height\n    if (!aspectRatio) {\n      return options\n    }\n    newOptions = {}\n    for (i in options) {\n      if (Object.prototype.hasOwnProperty.call(options, i)) {\n        newOptions[i] = options[i]\n      }\n    }\n    newOptions.crop = true\n    width = img.naturalWidth || img.width\n    height = img.naturalHeight || img.height\n    if (width / height > aspectRatio) {\n      newOptions.maxWidth = height * aspectRatio\n      newOptions.maxHeight = height\n    } else {\n      newOptions.maxWidth = width\n      newOptions.maxHeight = width / aspectRatio\n    }\n    return newOptions\n  }\n\n  // Canvas render method, allows to implement a different rendering algorithm:\n  loadImage.renderImageToCanvas = function (\n    canvas,\n    img,\n    sourceX,\n    sourceY,\n    sourceWidth,\n    sourceHeight,\n    destX,\n    destY,\n    destWidth,\n    destHeight,\n    options\n  ) {\n    var ctx = canvas.getContext('2d')\n    if (options.imageSmoothingEnabled === false) {\n      ctx.imageSmoothingEnabled = false\n    } else if (options.imageSmoothingQuality) {\n      ctx.imageSmoothingQuality = options.imageSmoothingQuality\n    }\n    ctx.drawImage(\n      img,\n      sourceX,\n      sourceY,\n      sourceWidth,\n      sourceHeight,\n      destX,\n      destY,\n      destWidth,\n      destHeight\n    )\n    return canvas\n  }\n\n  // Determines if the target image should be a canvas element:\n  loadImage.hasCanvasOption = function (options) {\n    return options.canvas || options.crop || !!options.aspectRatio\n  }\n\n  // Scales and/or crops the given image (img or canvas HTML element)\n  // using the given options.\n  // Returns a canvas object if the browser supports canvas\n  // and the hasCanvasOption method returns true or a canvas\n  // object is passed as image, else the scaled image:\n  loadImage.scale = function (img, options, data) {\n    // eslint-disable-next-line no-param-reassign\n    options = options || {}\n    var canvas = document.createElement('canvas')\n    var useCanvas =\n      img.getContext ||\n      (loadImage.hasCanvasOption(options) && canvas.getContext)\n    var width = img.naturalWidth || img.width\n    var height = img.naturalHeight || img.height\n    var destWidth = width\n    var destHeight = height\n    var maxWidth\n    var maxHeight\n    var minWidth\n    var minHeight\n    var sourceWidth\n    var sourceHeight\n    var sourceX\n    var sourceY\n    var pixelRatio\n    var downsamplingRatio\n    var tmp\n    /**\n     * Scales up image dimensions\n     */\n    function scaleUp() {\n      var scale = Math.max(\n        (minWidth || destWidth) / destWidth,\n        (minHeight || destHeight) / destHeight\n      )\n      if (scale > 1) {\n        destWidth *= scale\n        destHeight *= scale\n      }\n    }\n    /**\n     * Scales down image dimensions\n     */\n    function scaleDown() {\n      var scale = Math.min(\n        (maxWidth || destWidth) / destWidth,\n        (maxHeight || destHeight) / destHeight\n      )\n      if (scale < 1) {\n        destWidth *= scale\n        destHeight *= scale\n      }\n    }\n    if (useCanvas) {\n      // eslint-disable-next-line no-param-reassign\n      options = loadImage.getTransformedOptions(img, options, data)\n      sourceX = options.left || 0\n      sourceY = options.top || 0\n      if (options.sourceWidth) {\n        sourceWidth = options.sourceWidth\n        if (options.right !== undefined && options.left === undefined) {\n          sourceX = width - sourceWidth - options.right\n        }\n      } else {\n        sourceWidth = width - sourceX - (options.right || 0)\n      }\n      if (options.sourceHeight) {\n        sourceHeight = options.sourceHeight\n        if (options.bottom !== undefined && options.top === undefined) {\n          sourceY = height - sourceHeight - options.bottom\n        }\n      } else {\n        sourceHeight = height - sourceY - (options.bottom || 0)\n      }\n      destWidth = sourceWidth\n      destHeight = sourceHeight\n    }\n    maxWidth = options.maxWidth\n    maxHeight = options.maxHeight\n    minWidth = options.minWidth\n    minHeight = options.minHeight\n    if (useCanvas && maxWidth && maxHeight && options.crop) {\n      destWidth = maxWidth\n      destHeight = maxHeight\n      tmp = sourceWidth / sourceHeight - maxWidth / maxHeight\n      if (tmp < 0) {\n        sourceHeight = (maxHeight * sourceWidth) / maxWidth\n        if (options.top === undefined && options.bottom === undefined) {\n          sourceY = (height - sourceHeight) / 2\n        }\n      } else if (tmp > 0) {\n        sourceWidth = (maxWidth * sourceHeight) / maxHeight\n        if (options.left === undefined && options.right === undefined) {\n          sourceX = (width - sourceWidth) / 2\n        }\n      }\n    } else {\n      if (options.contain || options.cover) {\n        minWidth = maxWidth = maxWidth || minWidth\n        minHeight = maxHeight = maxHeight || minHeight\n      }\n      if (options.cover) {\n        scaleDown()\n        scaleUp()\n      } else {\n        scaleUp()\n        scaleDown()\n      }\n    }\n    if (useCanvas) {\n      pixelRatio = options.pixelRatio\n      if (pixelRatio > 1) {\n        canvas.style.width = destWidth + 'px'\n        canvas.style.height = destHeight + 'px'\n        destWidth *= pixelRatio\n        destHeight *= pixelRatio\n        canvas.getContext('2d').scale(pixelRatio, pixelRatio)\n      }\n      downsamplingRatio = options.downsamplingRatio\n      if (\n        downsamplingRatio > 0 &&\n        downsamplingRatio < 1 &&\n        destWidth < sourceWidth &&\n        destHeight < sourceHeight\n      ) {\n        while (sourceWidth * downsamplingRatio > destWidth) {\n          canvas.width = sourceWidth * downsamplingRatio\n          canvas.height = sourceHeight * downsamplingRatio\n          loadImage.renderImageToCanvas(\n            canvas,\n            img,\n            sourceX,\n            sourceY,\n            sourceWidth,\n            sourceHeight,\n            0,\n            0,\n            canvas.width,\n            canvas.height,\n            options\n          )\n          sourceX = 0\n          sourceY = 0\n          sourceWidth = canvas.width\n          sourceHeight = canvas.height\n          // eslint-disable-next-line no-param-reassign\n          img = document.createElement('canvas')\n          img.width = sourceWidth\n          img.height = sourceHeight\n          loadImage.renderImageToCanvas(\n            img,\n            canvas,\n            0,\n            0,\n            sourceWidth,\n            sourceHeight,\n            0,\n            0,\n            sourceWidth,\n            sourceHeight,\n            options\n          )\n        }\n      }\n      canvas.width = destWidth\n      canvas.height = destHeight\n      loadImage.transformCoordinates(canvas, options)\n      return loadImage.renderImageToCanvas(\n        canvas,\n        img,\n        sourceX,\n        sourceY,\n        sourceWidth,\n        sourceHeight,\n        0,\n        0,\n        destWidth,\n        destHeight,\n        options\n      )\n    }\n    img.width = destWidth\n    img.height = destHeight\n    return img\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}